function loadJSON(c,a){var b=new XMLHttpRequest;b.overrideMimeType("application/json");b.open("GET",c,!0);b.onreadystatechange=function(){4==b.readyState&&"200"==b.status&&a(b.responseText)};b.send(null)}function inside(c,a){for(var b=c[0],e=c[1],d=!1,f=0,g=a.length-1;f<a.length;g=f++){var h=a[f][0],k=a[f][1],l=a[g][0],g=a[g][1];k>e!=g>e&&b<(l-h)*(e-k)/(g-k)+h&&(d=!d)}return d}
CanvasRenderingContext2D.prototype._roundRect=function(c,a,b,e,d,f,g){"undefined"==typeof g&&(g=!0);"undefined"===typeof d&&(d=5);if("number"===typeof d)d={tl:d,tr:d,br:d,bl:d};else{var h={tl:0,tr:0,br:0,bl:0},k;for(k in h)d[k]=d[k]||h[k]}this.beginPath();this.moveTo(c+d.tl,a);this.lineTo(c+b-d.tr,a);this.quadraticCurveTo(c+b,a,c+b,a+d.tr);this.lineTo(c+b,a+e-d.br);this.quadraticCurveTo(c+b,a+e,c+b-d.br,a+e);this.lineTo(c+d.bl,a+e);this.quadraticCurveTo(c,a+e,c,a+e-d.bl);this.lineTo(c,a+d.tl);this.quadraticCurveTo(c,
a,c+d.tl,a);this.closePath();f&&this.fill();g&&this.stroke()};CanvasRenderingContext2D.prototype._roundPoly=function(c,a){for(var b=c.data.shape,e=null,d=null,f=0;f<b.length;f++)switch(e=b[f].x,d=b[f].y,b[f]["function"]){case "moveTo":this.moveTo(parseInt(c.startX+e),parseInt(c.startY+d));break;case "lineTo":this.lineTo(parseInt(c.startX+e),parseInt(c.startY+d))}this.stroke();this.fill()};
CanvasRenderingContext2D._customShape=function(c){for(var a=c.data.customShape,b=0;b<a.length;b++){var e=a[b]["function"],d=a[b].x,f=a[b].y;"moveTo"===e&&this.moveTo(parseInt(c.startX+d),parseInt(c.startY+f));"lineTo"===e&&this.lineTo(parseInt(c.startX+d),parseInt(c.startY+f))}this.stroke();this.fill()};var idKeyboardCount=0;
function Keyboard(c,a,b,e){var d=c.getBoundingClientRect();this.id=idKeyboardCount++;this.layout=a.layout||"keyboards/qwerty_uk.json";this.canvas=c;this.context=c.getContext("2d");this.offsetX=d.left||0;this.offsetY=d.top||0;this.defaultCursor=a.defaultCursor||"auto";this.hoverCursor=a.hoverCursor||"pointer";this.disabledCursor=a.disabledCursor||"auto";this.backgroundColor=a.backgroundColor||c.style.backgroundColor||"white";this.keyBorderColor=a.keyBorderColor||"gray";this.keyBorderWidth=a.keyBorderWidth||
1;this.keyBorderRadius=a.keyBorderRadius||1;this.keyBackgroundColor=a.keyBackgroundColor||"black";this.keyFontType=a.keyFontType||"25px Calibri";this.keyFontColor=a.keyFontColor||"gray";this.keyHoverBorderColor=a.keyHoverBorderColor||"white";this.keyHoverBorderWidth=a.keyHoverBorderWidth||this.keyBorderWidth;this.keyHoverBorderRadius=a.keyHoverBorderRadius||this.keyBorderRadius;this.keyHoverBackgroundColor=a.keyHoverBackgroundColor||this.keyBackgroundColor;this.keyHoverFontType=a.keyHoverFontType||
this.keyFontType;this.keyHoverFontColor=a.keyHoverFontColor||this.keyFontColor;this.keySelectedBorderColor=a.keySelectedBorderColor||"#3FB55E";this.keySelectedBorderWidth=a.keySelectedBorderWidth||this.keyBorderWidth;this.keySelectedBorderRadius=a.keySelectedBorderRadius||this.keyBorderRadius;this.keySelectedBackgroundColor=a.keySelectedBackgroundColor||this.keyBackgroundColor;this.keySelectedFontType=a.keySelectedFontType||this.keyFontType;this.keySelectedFontColor=a.keySelectedFontColor||this.keyFontColor;
this.keySelectedHoverBorderColor=a.keySelectedHoverBorderColor||this.keySelectedBorderColor;this.keySelectedHoverBorderWidth=a.keySelectedHoverBorderWidth||this.keySelectedBorderWidth;this.keySelectedHoverBorderRadius=a.keySelectedHoverBorderRadius||this.keyBorderRadius;this.keySelectedHoverBackgroundColor=a.keySelectedHoverBackgroundColor||this.keySelectedBackgroundColor;this.keySelectedHoverFontType=a.keySelectedHoverFontType||this.keySelectedFontType;this.keySelectedHoverFontColor=a.keySelectedHoverFontColor||
this.keySelectedFontColor;this.debug=b||!1;this.mouseClick={x:null,y:null};this.lines=e||[];this.selectedKey={};this.canvas.style.backgroundColor=this.backgroundColor}Keyboard.prototype.pushLine=function(c){this.lines.push(c)};
Keyboard.prototype.handleMouseDown=function(c){for(var a=0;a<this.lines.length;a++)for(var b=parseInt(c.clientX-this.offsetX+this.lines[a].startX+window.pageXOffset),e=parseInt(c.clientY-this.offsetY+this.lines[a].startY+window.pageYOffset),d=0;d<this.lines[a].keys.length;d++)this.lines[a].keys[d].isPointInside(b-this.lines[a].startX,e-this.lines[a].startY)&&(this.mouseClick.x=b,this.mouseClick.y=e,this.debug&&console.log(this.lines[a].keys[d].content),this.selectedKey===this.lines[a].keys[d]?(this.selectedKey.selected=
!1,this.selectedKey={}):(this.selectedKey.selected=!1,this.selectedKey=this.lines[a].keys[d],this.selectedKey.selected=!0),this.canvas.dispatchEvent(new CustomEvent("keyClick",{detail:this.selectedKey})))};
Keyboard.prototype.handleMouseHover=function(c){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(var a={hover:!1},b=0;b<this.lines.length;b++)for(var e=parseInt(c.clientX-this.offsetX+this.lines[b].startX+window.pageXOffset),d=parseInt(c.clientY-this.offsetY+this.lines[b].startY+window.pageYOffset),f=0;f<this.lines[b].keys.length;f++)this.lines[b].keys[f].isPointInside(e-this.lines[b].startX,d-this.lines[b].startY)?e!==this.mouseClick.x||d!==this.mouseClick.y?a={hover:!0,i:b,j:f}:
this.lines[b].keys[f].reDraw():this.lines[b].keys[f].reDraw();this.debug&&console.log(a);a.hover?(c=this.lines[a.i].keys[a.j],c.disabled?(this.canvas.style.cursor=this.disabledCursor,c.draw()):(this.canvas.style.cursor=this.hoverCursor,c.hover()),this.debug&&console.log(this.lines[b].keys[f].content)):this.canvas.style.cursor=this.defaultCursor};
Keyboard.prototype.init=function(){var c={},a=this;loadJSON(a.layout,function(b){c=JSON.parse(b);for(b=0;b<c.rows.length;b++){var e=new Line(a,c.rows[b].startX,c.rows[b].startY,c.rows[b].spaceX,c.rows[b].spaceY);a.debug&&console.group();a.debug&&console.log(e);for(var d=0,f=0,g=0;g<c.rows[b].keys.length;g++){var h=c.rows[b].keys[g],k=40,l=40,n=0,m=0;if("standard"!==(h.type||"standard"))switch(h.type){default:n=e.startX+d+g*e.spaceX+g*k,m=e.startY+f+b*e.spaceY+b*l,d+=k*(h.data.widthFactor||1)-k,f+=
l*(h.data.heightFactor||1)-l,k*=h.data.widthFactor||1,l*=h.data.heightFactor||1}else n=e.startX+d+g*e.spaceX+g*k,m=e.startY+f+b*e.spaceY+b*l;m=e.startY+b*e.spaceY+b*l;h=new Key(e,n,m,k,l,h.content,h.type||"standard",h.data);a.debug&&console.log(h)}a.debug&&console.groupEnd()}a.canvas.addEventListener("click",function(b){a.handleMouseDown(b)});a.canvas.addEventListener("mousemove",function(b){a.handleMouseHover(b)})})};
Keyboard.prototype.resizeCanvas=function(c,a){this.canvas.width=c;this.canvas.height=a;this.context=this.canvas.getContext("2d")};var idLineCount=0;function Line(c,a,b,e,d,f){this.id=idLineCount++;this.context=c.context;this.startX=a;this.startY=b;this.spaceX=e;this.spaceY=d;this.keys=f||[];this.keyboard=c;c.pushLine(this)}Line.prototype.pushKey=function(c){this.keys.push(c)};Line.prototype.dot=function(){this.context.beginPath();this.context.strokeStyle="red";this.context.rect(this.startX,this.startY,1,1);this.context.stroke()};var idKeyCount=0;function Key(c,a,b,e,d,f,g,h){this.id=idKeyCount++;this.startX=a;this.startY=b;this.lengthX=e;this.lengthY=d;this.content=f||"";this.type=g||"standard";this.data=h||{};this.line=c;this.selected=!1;this.disabled=this.data.disabled||!1;c.pushKey(this);this.draw()}Key.prototype.reDraw=function(c,a){this.startX=c||this.startX;this.startY=a||this.startY;this.draw(this.selected?this.line.keyboard.keySelectedBorderColor:this.line.keyboard.keyBorderColor);return this};
Key.prototype.hover=function(c,a){this.startX=c||this.startX;this.startY=a||this.startY;this.draw(this.selected?this.line.keyboard.keySelectedHoverBorderColor:this.line.keyboard.keyHoverBorderColor,!0)};
Key.prototype.draw=function(c,a){a=a||!1;var b=this.line.context,e=this.startX+this.lengthX/2,d=b.measureText("I").width+this.startY+this.lengthY/2,f=a?this.selected?this.line.keyboard.keySelectedHoverBorderRadius:this.line.keyboard.keyHoverBorderRadius:this.selected?this.line.keyboard.keySelectedBorderRadius:this.line.keyboard.keyBorderRadius;b.save();b.beginPath();b.fillStyle=this.selected?this.line.keyboard.keySelectedBackgroundColor:this.line.keyboard.keyBackgroundColor;b.strokeStyle=c||(this.selected?
this.line.keyboard.keySelectedBorderColor:this.line.keyboard.keyBorderColor);b.lineWidth=a?this.selected?this.line.keyboard.keySelectedHoverBorderWidth:this.line.keyboard.keyHoverBorderWidth:this.selected?this.line.keyboard.keySelectedBorderWidth:this.line.keyboard.keyBorderWidth;"custom"===this.type?(e=this.startX+this.data.customWidth/2||e,d=this.startX+this.data.customHeight/2||d):b._roundRect(this.startX,this.startY,this.lengthX,this.lengthY,parseInt(f),!0,!0);b.font=a?this.selected?this.line.keyboard.keySelectedHoverFontType:
this.line.keyboard.keyHoverFontType:this.selected?this.line.keyboard.keySelectedFontType:this.line.keyboard.keyFontType;b.textAlign="center";b.fillStyle=a?this.selected?this.line.keyboard.keySelectedHoverFontColor:this.line.keyboard.keyHoverFontColor:this.selected?this.line.keyboard.keySelectedFontColor:this.line.keyboard.keyFontColor;b.fillText(this.content,e,d);b.restore()};
Key.prototype.isPointInside=function(c,a){if("custom"===this.type){for(var b=[],e=0;e<this.data.customShape.length;e++)"lineTo"===this.data.customShape[e]["function"]&&b.push([parseInt(this.data.customShape[e].x+this.startX),parseInt(this.data.customShape[e].y+this.startY)]);return inside([c,a],b)}b=c>=this.startX&&c<=this.startX+this.lengthX&&a>=this.startY&&a<=this.startY+this.lengthY;this.line.keyboard.debug&&console.log(b+" | mouseX: "+c+" | mouseY: "+a+" | keyX: "+this.startX+" | keyY: "+this.startY);
return b};
